version: "3.9"

services:
  app:
    build:
      context: .
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - dev-static-data:/vol/web
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - DEBUG=1
    depends_on:
      - db

  db:
    image: postgres:13-alpine
    volumes:
      - dev-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme

  # rabbitmq:
  #   image: rabbitmq:3.10.7-management
  #   hostname: rabbitmq
  #   restart: always
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=rmuser
  #     - RABBITMQ_DEFAULT_PASS=rmpassword
  #     - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit disk_free_limit 2147483648
  #   ports:
  #     - 15672:15672

  redis:
    image: redis:7.0.5-alpine
    hostname: redis

  worker:
    build:
      context: .
    hostname: worker
    entrypoint: celery
    command: -A app.celery_app.app worker --loglevel=info
    volumes:
      - ./app:/app
    links:
      - redis
    environment:
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - DEBUG=1
    depends_on:
      - redis
      - db

  flower:
    build:
      context: .
    hostname: flower
    entrypoint: celery
    command: -A app.celery_app.app flower
    volumes:
      - ./app:/app
    links:
      - redis
    depends_on:
      - redis
    ports:
      - "5555:5555"



volumes:
  dev-db-data:
  dev-static-data: